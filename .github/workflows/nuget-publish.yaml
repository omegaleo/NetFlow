name: Public Nuget Packages
on:
  release:
    types: [created]
jobs:
  get-release:
    name: Get Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}
    outputs:
      upload_url: ${{ steps.get_release.outputs.upload_url }}
  publish_doc_helper:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .Net Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
    - name: Update Project Version
      run: sed -i "s/\(<Version>\([0-9]\+\.\)\{2\}\)\([0-9]\+\)/\1${{ github.event.release.tag_name }}/" "./documentation-helper/UnityFlow.DocumentationHelper/UnityFlow.DocumentationHelper.Library/UnityFlow.DocumentationHelper.Library.csproj"
    - name: Create Nuget Package
      run: dotnet pack "./documentation-helper/UnityFlow.DocumentationHelper/UnityFlow.DocumentationHelper.Library/UnityFlow.DocumentationHelper.Library.csproj" -c Release /p:Version=${{ github.event.release.tag_name }} /p:PackageReleaseNotes="See https://github.com/omegaleo/UnityFlow/releases/tag/${{ github.event.release.tag_name }}"
    - name: Archive Nuget Package
      uses: actions/upload-artifact@v1
      with:
        name: UnityFlow.DocumentationHelper.Library
        path: ./documentation-helper/UnityFlow.DocumentationHelper/UnityFlow.DocumentationHelper.Library/bin/Release/UnityFlow.DocumentationHelper.Library.${{ github.event.release.tag_name }}.nupkg
    - name: Publish Nuget Package
      run: dotnet nuget push **/*.nupkg --api-key ${{ secrets.nuget_api_key }} --source https://api.nuget.org/v3/index.json --no-symbols true
  upload-release:
    name: Upload nuget files to the release
    runs-on: ubuntu-latest
    needs: [get-release, publish_doc_helper]
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Build (${{ matrix.targetPlatform }})
      - name: Archive Content
        uses: thedoctor0/zip-release@master
        with:
          filename: ./documentation-helper/UnityFlow.DocumentationHelper/UnityFlow.DocumentationHelper.Library/bin/Release/UnityFlow.DocumentationHelper.Library.${{ github.event.release.tag_name }}.nupkg
      - name: Upload assets to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ARTIFACT_TOKEN }}
        with:
          upload_url: ${{ needs.get-release.outputs.upload_url }}
          asset_path: UnityFlow.DocumentationHelper.Library.${{ github.event.release.tag_name }}.nupkg
          asset_name: UnityFlow.DocumentationHelper.Library.${{ github.event.release.tag_name }}.nupkg